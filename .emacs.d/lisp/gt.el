(defun gt/translate-key ()
  (interactive)
  (save-excursion
    (let* ((original (format "%s" (symbol-at-point)))
           (bounds (bounds-of-thing-at-point 'symbol))
           (exp (concat "(gt.ingest.translations/translate-key " original ")")))
      (let* ((res (read (nrepl-dict-get (cider-nrepl-sync-request:eval exp) "value")))
             (selected (if (= 1 (length res))
                           (car res)
                         (ido-completing-read "Possible translations: " res nil t "")))
             (replacement (concat "::" selected)))
        (delete-region (car bounds) (cdr bounds))
        (insert replacement)
        (list replacement original)))))

(defun gt/preserve-translate-key ()
  (interactive)
  (let ((res (gt/translate-key)))
    (search-forward ":translations")
    (search-forward "}")
    (left-char)
    (insert "\n")
    (indent-for-tab-command)
    (insert (car res))
    (insert " ")
    (insert (nth 1 res))
    (align-cljlet)))
